{"version":3,"sources":["StateProvider.js","reducer.js","Search.js","Home.js","useGoogleSearch.js","keys.js","SearchPage.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","actionTypes","state","action","console","log","type","term","Search","hideButtons","dispatch","useState","input","setInput","history","useHistory","search","e","preventDefault","push","className","onChange","target","Button","onClick","variant","Home","to","Avatar","alt","src","useGoogleSearch","data","setData","useEffect","a","fetch","then","response","json","result","fetchData","SearchPage","searchInformation","formattedTotalResults","formattedSearchTime","items","map","item","pagemap","cse_image","length","href","link","displayLink","title","snippet","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a59ebba3.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {\" \"}\r\n    {children}{\" \"}\r\n  </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n","export const initialState = {\r\n  term: null\r\n};\r\n\r\nexport const actionTypes = {\r\n  SET_SEARCH_TERM: \"SET_SEARCH_TERM\"\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case actionTypes.SET_SEARCH_TERM:\r\n      return {\r\n        ...state,\r\n        term: action.term\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React, { useState } from \"react\";\r\nimport \"./Search.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { actionTypes } from \"./reducer\";\r\n\r\nfunction Search({ hideButtons = false }) {\r\n  const [{}, dispatch] = useStateValue();\r\n\r\n  const [input, setInput] = useState(\"\");\r\n  const history = useHistory();\r\n  const search = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"you hit search\", input);\r\n    dispatch({\r\n      type: actionTypes.SET_SEARCH_TERM,\r\n      term: input\r\n    });\r\n    history.push(\"/search\");\r\n  };\r\n  return (\r\n    <form className=\"search\">\r\n      <div className=\"search__input\">\r\n        <SearchIcon className=\"search__inputIcon\" />\r\n        <input value={input} onChange={(e) => setInput(e.target.value)} />{\" \"}\r\n        <MicIcon className=\"search__MicIcon\" />\r\n      </div>\r\n      {!hideButtons ? (\r\n        <div className=\"search__buttons\">\r\n          <Button type=\"submit\" onClick={search} variant=\"outlined\">\r\n            Google Search{\" \"}\r\n          </Button>{\" \"}\r\n          <Button variant=\"outlined\"> I 'm Feeling Lucky</Button>{\" \"}\r\n        </div>\r\n      ) : (\r\n        <div className=\"search__buttons\">\r\n          <Button\r\n            className=\"search__buttonsHidden\"\r\n            type=\"submit\"\r\n            onClick={search}\r\n            variant=\"outlined\"\r\n          >\r\n            Google Search{\" \"}\r\n          </Button>{\" \"}\r\n          <Button className=\"search__buttonsHidden\" variant=\"outlined\">\r\n            {\" \"}\r\n            I 'm Feeling Lucky{\" \"}\r\n          </Button>{\" \"}\r\n        </div>\r\n      )}{\" \"}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\nimport Search from \"./Search\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport { Avatar } from \"@material-ui/core\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"home__header\">\r\n        <div className=\"home__headerLeft\">\r\n          <Link to=\"/about\"> About </Link>{\" \"}\r\n          <Link\r\n            to=\"/store\r\n        \"\r\n          >\r\n            {\" \"}\r\n            Store{\" \"}\r\n          </Link>{\" \"}\r\n        </div>{\" \"}\r\n        <div className=\"home__headerRight\">\r\n          <Link to=\"/gmail\"> Gmail </Link>{\" \"}\r\n          <Link\r\n            to=\"/images\r\n        \"\r\n          >\r\n            {\" \"}\r\n            Images{\" \"}\r\n          </Link>{\" \"}\r\n          <AppsIcon />\r\n          {/* <Avatar /> */}\r\n          <Avatar className=\"header_avatar\" alt=\"Siri\" src=\"Siri.jpeg\" />\r\n        </div>{\" \"}\r\n      </div>{\" \"}\r\n      <div className=\"home__body\">\r\n        <div className=\"home__inputContainer\">\r\n          <Search />\r\n        </div>{\" \"}\r\n      </div>{\" \"}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from \"react\";\r\nimport API_KEY from \"./keys\";\r\n\r\nconst CONTEXT_KEY = \"caee463d9426eeca0\";\r\n\r\nconst useGoogleSearch = (term) => {\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      fetch(\r\n        `https://www.googleapis.com/customsearch/v1?key=${API_KEY}&cx=${CONTEXT_KEY}&q=${term}`\r\n      )\r\n        .then((response) => response.json())\r\n        .then((result) => {\r\n          setData(result);\r\n        });\r\n    };\r\n    fetchData();\r\n  }, [term]);\r\n  return { data };\r\n};\r\n\r\nexport default useGoogleSearch;\r\n","export const API_KEY = \"AIzaSyDyjiofn_3fx64CQe0YB8XRIrHQzPosCrg\";\r\nexport default API_KEY;\r\n","import { Divider } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./searchPage.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport Search from \"./Search\";\r\nimport Response from \"./response\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nimport useGoogleSearch from \"./useGoogleSearch\";\r\n\r\nfunction SearchPage() {\r\n  const [{ term }, dispatch] = useStateValue();\r\n\r\n  // LIVE API CALL\r\n  const { data } = useGoogleSearch(term);\r\n\r\n  //Dummy API CALL\r\n  // const data = Response;\r\n  // // https://developers.google.com/custom-search/v1/using_rest\r\n\r\n  // https://cse.google.com/cse/create/new\r\n  console.log(data);\r\n  return (\r\n    <div className=\"searchPage\">\r\n      <div className=\"searchPage__header\">\r\n        <Link to=\"/\">\r\n          <img\r\n            className=\"searchPage__logo\"\r\n            src=\"https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_92x30dp.png\"\r\n            alt=\"\"\r\n          />\r\n        </Link>{\" \"}\r\n        <div className=\"searchPage__headerBody\">\r\n          <Search hideButtons />\r\n          <div className=\"searchPage__options\">\r\n            <div className=\"searchPage__optionsLeft\">\r\n              <div className=\"searchPage__option\">\r\n                <SearchIcon />\r\n                <Link to=\"/all\"> All </Link>{\" \"}\r\n              </div>{\" \"}\r\n              <div className=\"searchPage__option\">\r\n                <DescriptionIcon />\r\n                <Link to=\"/all\"> News </Link>{\" \"}\r\n              </div>{\" \"}\r\n              <div className=\"searchPage__option\">\r\n                <ImageIcon />\r\n                <Link to=\"/all\"> Images </Link>{\" \"}\r\n              </div>{\" \"}\r\n              <div className=\"searchPage__option\">\r\n                <LocalOfferIcon />\r\n                <Link to=\"/all\"> shopping </Link>{\" \"}\r\n              </div>{\" \"}\r\n              <div className=\"searchPage__option\">\r\n                <RoomIcon />\r\n                <Link to=\"/all\"> maps </Link>{\" \"}\r\n              </div>{\" \"}\r\n              <div className=\"searchPage__option\">\r\n                <MoreVertIcon />\r\n                <Link to=\"/all\"> more </Link>{\" \"}\r\n              </div>{\" \"}\r\n            </div>{\" \"}\r\n            <div className=\"searchPage__optionsRight\">\r\n              <div className=\"searchPage__option\">\r\n                <Link to=\"/settings\"> Settings </Link>{\" \"}\r\n              </div>{\" \"}\r\n              <div className=\"searchPage__option\">\r\n                <Link to=\"/tools\"> Tools </Link>{\" \"}\r\n              </div>{\" \"}\r\n            </div>{\" \"}\r\n          </div>{\" \"}\r\n        </div>{\" \"}\r\n      </div>\r\n      {term && (\r\n        <div className=\"searchPage__results\">\r\n          <p className=\"searchPage__resultCount\">\r\n            About {data?.searchInformation.formattedTotalResults} results (\r\n            {data?.searchInformation.formattedSearchTime} seconds) for {term}\r\n          </p>\r\n          {data?.items.map((item) => (\r\n            <div className=\"searchPage__result\">\r\n              {item.pagemap?.cse_image?.length > 0 && (\r\n                <img\r\n                  className=\"searchPage__resultImage\"\r\n                  src={\r\n                    item.pagemap?.cse_image?.length > 0 &&\r\n                    item.pagemap?.cse_image[0]?.src\r\n                  }\r\n                  alt=\"\"\r\n                />\r\n              )}\r\n              <a href={item.link}>{item.displayLink} ▽</a>\r\n              <a className=\"searchPage__resultTitle\" href={item.link}>\r\n                {\" \"}\r\n                <h2>{item.title}</h2>\r\n              </a>\r\n              <p className=\"searchPage__resultSnippet\">{item.snippet}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchPage;\r\n","import React from \"react\";\r\nimport Home from \"./Home\";\r\nimport SearchPage from \"./SearchPage\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/search\">\r\n            <SearchPage />\r\n          </Route>{\" \"}\r\n          <Route path=\"/\">\r\n            {\" \"}\r\n            {/* Home*/} <Home /> {/* SearchPage*/}{\" \"}\r\n          </Route>{\" \"}\r\n        </Switch>{\" \"}\r\n      </Router>{\" \"}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" }\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { StateProvider } from \"./StateProvider\";\r\nimport reducer, { initialState } from \"./reducer\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StateProvider initialState={initialState} reducer={reducer}>\r\n      <App />\r\n    </StateProvider>{\" \"}\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}